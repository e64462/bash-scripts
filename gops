#!/bin/bash

SMOL_OPTS="a:b:cde"
LONG_OPTS="app:,ball:,cat"
sch="$1"

check_opt() {
	if [[ ${#sch} -eq 1 ]]; then
		prefix="-"
	else
		prefix="--"
	fi
	
	get_offset offset "$sch"
	code=$?
	if [[ $code -eq 0 ]]; then
		echo "option "$prefix$sch" takes options. do stuff here"
	elif [[ $code -eq 1 ]]; then
		echo "option "$prefix$sch" does not take options."
	else
		echo "option "$prefix$sch" is not a valid option."
	fi
}

get_offset() {
	# Function returns 0 if option is valid and requires arguments
	# Function returns 1 if option is valid and does not require an argument
	# Function returns 2 if option is invalid

	declare -n goffset=$1 # offset to return on a match

	local opt="$2"		# option to search for
	local lgth=${#opt}

	if [[ $lgth -eq 1 ]]; then
		# opt is short
		local optstr=$SMOL_OPTS
		goffset=${optstr%%$opt*}
		goffset=${#goffset}
		if [[ $goffset -lt ${#optstr} ]]; then
			# a match was found
			if [[ "${optstr:$(( goffset + lgth )):1}" == ":" ]]; then
				# the option requires an argument
				return 0
			else
				return 1
			fi
		fi
	else # opt is long
		local optstr="$LONG_OPTS"
		local lastchar="${optstr: -1}"
		local firstchar="${optstr:0:1}"
		local offsetadjust=0
	
		[[ "$firstchar" != "," ]] && optstr=",$optstr" && ((offsetadjust++))
		[[ "$lastchar" != "," ]] && optstr="${optstr},"
	
		fullstring_matches=(",${opt}," ",${opt}:,")
		
		for match in "${fullstring_matches[@]}"	; do
		#	echo "match is '$match'"
			goffset=${optstr%%$match*}
			goffset=${#goffset}
	
		#	echo "goffset is '$goffset; and optstr has length '${#optstr}'"
			if [[ $goffset -lt ${#optstr} ]]; then
				# a match was found
				((goffset++))
				[[ "$firstchar" != "," ]] && ((goffset--))
				if [[ "${match: -2:1}" == ":" ]]; then
					# the option requires an argument
					return 0
				else
					# the option does not require any arguments
					return 1
				fi
			else
				goffset=$(( ${#optstr} - offsetadjust ))			
			fi
		done
	fi
	return 2
}

check_opt "$sch"
